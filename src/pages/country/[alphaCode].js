import React from "react";
import Link from "next/link";
import { useRouter } from "next/router";
import { getAllCountries, getCountryDetail } from "../../helpers/api-util";
import Image from "next/image";
import Button from "../../components/Button";

import { getDetailBlockOne, getDetailBlockTwo } from "../../helpers/misc";
import {
  BorderContainer,
  BorderLink,
  DeatilBlock,
  DeatilItem,
  DetailContainer,
  DetailGrid,
  FlagContainer,
} from "../../layouts/detailPage";
import { FullSpan, Heading, SubHeading } from "../../layouts/Share";
import Head from "next/head";

const Detail = ({ country, borderCountries }) => {
  const router = useRouter();

  const detailBlockOne = getDetailBlockOne(country);
  const detailBlockTwo = getDetailBlockTwo(country);

  return (
    <>
      <Head>
        <title>{country.name} </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {/* BACK BUTTON */}
        <Button hadnleBackClick={() => router.back()} />
      </div>

      <DetailContainer key={country.alpha3Code}>
        <FlagContainer>
          <Image
            alt="country-flag"
            src={country.flag}
            layout="fill"
            objectFit="cover"
          />
        </FlagContainer>

        <DetailGrid>
          <Heading>{country.name}</Heading>

          <DeatilBlock>
            {detailBlockOne.map((item) => (
              <DeatilItem key={item.label}>
                <span>{item.label}: </span>
                <span>{item.info}</span>
              </DeatilItem>
            ))}
          </DeatilBlock>

          <DeatilBlock>
            {detailBlockTwo.map((item) => (
              <DeatilItem key={item.label}>
                <span>{item.label}: </span>
                <span>{item.info}</span>
              </DeatilItem>
            ))}
          </DeatilBlock>

          {/* LIST OF BORDER COUNTRIES */}
          <FullSpan>
            <SubHeading>Border Countries</SubHeading>
            <BorderContainer>
              {borderCountries.map((country) => (
                <Link
                  href={`/country/${country.alpha3Code}`}
                  key={country.alpha2Code}
                >
                  <a>
                    <BorderLink>{country.name}</BorderLink>
                  </a>
                </Link>
              ))}
            </BorderContainer>
          </FullSpan>
        </DetailGrid>
      </DetailContainer>
    </>
  );
};

export default Detail;

export async function getStaticProps(context) {
  const alphaCode = context.params.alphaCode;
  const [countryData, countriesArr] = await Promise.all([
    getCountryDetail(alphaCode),
    getAllCountries(),
  ]);
  const borderCodeArr = countryData.borders;
  let borderCountryNameArr;
  if (borderCodeArr) {
    borderCountryNameArr = countriesArr.filter((country) =>
      borderCodeArr.includes(country.alpha3Code)
    );
  } else {
    borderCountryNameArr = [];
  }

  return {
    props: {
      country: countryData,
      borderCountries: borderCountryNameArr,
    },
  };
}

export async function getStaticPaths() {
  const countriesArr = await getAllCountries();

  const paths = countriesArr.map((country) => ({
    params: { alphaCode: country.alpha3Code },
  }));
  return {
    paths,
    fallback: false,
  };
}
